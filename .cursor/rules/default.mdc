---
description: 
globs: *
alwaysApply: true
---
# UX Design Style Guide for DAO Proposal Voting Dashboard

This style guide defines a modern, clean, and minimalistic design system for a Next.js 14 application built with TypeScript, Tailwind CSS, and Radix UI. The design emphasizes a sleek dark theme, highly legible typography, and spacious layouts to deliver a professional, intuitive user experience.

## 1. Design Principles
- **Clarity**: Prioritize intuitive and scannable UI elements.
- **Simplicity**: Reduce visual clutter to focus on functionality.
- **Accessibility**: Adhere to WCAG 2.1 AA standards for inclusivity.
- **Consistency**: Maintain repeatable patterns for cohesion.
- **Performance**: Optimize for fast rendering and minimal resource usage.

## 2. Foundations

### 2.1 Color Palette
The dark theme leverages the `aibtc` color scheme with vibrant orange and blue accents for interactivity and neutral grays for hierarchy. All colors meet WCAG 2.1 AA contrast ratios.

| Name            | Hex       | Usage                              |
|-----------------|-----------|------------------------------------|
| Background      | #121212   | Primary background (aibtc.gray.900)|
| Surface         | #232325   | Cards, modals (aibtc.gray.800)     |
| Text Primary    | #FFFFFF   | Headings, primary content (aibtc.white) |
| Text Secondary  | #CCCCCC   | Body text, labels (aibtc.gray.200) |
| Accent Orange   | #FF4F03   | Buttons, links (aibtc.orange.500)  |
| Accent Blue     | #0533D1   | Secondary accents (aibtc.blue.500) |
| Error           | #EF4444   | Error states and alerts            |

**Tailwind Config Example**:
```javascript
// tailwind.config.js
module.exports = {
  theme: {
    colors: {
      background: '#121212',
      surface: '#232325',
      text: {
        primary: '#FFFFFF',
        secondary: '#CCCCCC',
      },
      accent: {
        orange: '#FF4F03',
        blue: '#0533D1',
      },
      error: '#EF4444',
    },
  },
};
```

### 2.2 Typography
Use **Inter** for its clean, geometric design and excellent legibility on screens, with **system-ui** as a fallback.

| Element       | Font Size | Weight | Line Height | Color             | Font Family                     |
|---------------|-----------|--------|-------------|-------------------|---------------------------------|
| H1            | 28px      | 700    | 1.2         | Text Primary      | Inter                           |
| H2            | 22px      | 600    | 1.3         | Text Primary      | Inter                           |
| Body          | 16px      | 400    | 1.4         | Text Secondary    | Inter                           |
| Caption       | 14px      | 400    | 1.4         | Text Secondary    | Inter                           |

**CSS Implementation**:
```css
/* src/styles/global.css */
h1 {
  font-family: 'Inter', system-ui, sans-serif;
  font-size: 28px;
  font-weight: 700;
  line-height: 1.2;
  color: #FFFFFF;
}
body {
  font-family: 'Inter', system-ui, sans-serif;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.4;
  color: #CCCCCC;
}
```

### 2.3 Spacing and Layout
Use a **12px grid system** for a more spacious, modern feel.

- **Margins/Padding**: Multiples of 12px (12, 24, 36, 48, etc.).
- **Grid**: 12-column layout with 24px gutters.
- **Breakpoints**:
  - Mobile: <640px
  - Tablet: 640px–1024px
  - Desktop: >1024px

**Tailwind Classes**:
```html
<div class="grid grid-cols-12 gap-6 p-6 md:p-8">
  <div class="col-span-12 md:col-span-6">Content</div>
</div>
```

### 2.4 Iconography
Use monochromatic, line-style icons (e.g., Heroicons) at 24px with rounded edges for a modern look.

- **Color**: Text Secondary (#CCCCCC) for default, Accent Orange (#FF4F03) on hover.
- **Accessibility**: Include `aria-label` for screen readers.

**Example**:
```tsx
import { ChevronRightIcon } from '@heroicons/react/24/outline';

const NavIcon: FC = () => (
  <ChevronRightIcon
    className="h-6 w-6 text-text-secondary hover:text-accent-orange"
    aria-label="Next"
  />
);
```

## 3. Components

### 3.1 Buttons
Buttons use CVA for variants with softer corners and subtle shadows for a modern, tactile feel.

**Variants**:
- Primary: Solid orange background, white text.
- Outline: Orange border, transparent background.
- Ghost: No border, blue accent on hover.

**CVA Example**:
```tsx
import { cva } from 'class-variance-authority';

const buttonVariants = cva(
  'inline-flex items-center justify-center rounded-lg font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-accent-orange disabled:opacity-50 shadow-sm',
  {
    variants: {
      variant: {
        primary: 'bg-accent-orange text-text-primary hover:bg-accent-orange/90',
        outline: 'border border-accent-orange text-text-primary hover:bg-accent-orange/10',
        ghost: 'text-text-secondary hover:bg-accent-blue/10 hover:text-accent-blue',
      },
      size: {
        sm: 'h-9 px-3 text-sm',
        md: 'h-11 px-4 text-base',
        lg: 'h-13 px-6 text-lg',
      },
    },
    defaultVariants: {
      variant: 'primary',
      size: 'md',
    },
  }
);

interface ButtonProps extends VariantProps<typeof buttonVariants> {
  className?: string;
}

const Button = forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, ...props }, ref) => (
    <button
      className={cn(buttonVariants({ variant, size, className }))}
      ref={ref}
      {...props}
    />
  )
);
```

### 3.2 Cards
Cards are airy with larger padding, rounded corners, and subtle elevation for a clean, modern look.

**Structure**:
```tsx
<div className="bg-surface rounded-xl p-8 shadow-sm">
  <h3 className="text-xl font-semibold text-text-primary">Proposal Title</h3>
  <p className="mt-3 text-text-secondary">Description...</p>
  <div className="mt-6 flex gap-3">
    <Button variant="primary">Vote</Button>
    <Button variant="outline">Details</Button>
  </div>
</div>
```

### 3.3 Navigation
The sidebar is sleek, with a wider width and smoother hover effects for a modern feel.

**Example**:
```tsx
<nav className="fixed w-20 bg-background p-6 flex flex-col gap-6">
  <a href="/proposals" className="group flex items-center gap-3 text-text-secondary hover:text-accent-orange transition-colors duration-150">
    <DocumentIcon className="h-6 w-6" aria-label="Proposals" />
    <span className="hidden group-hover:block">Proposals</span>
  </a>
</nav>
```

## 4. Accessibility
- **Contrast**: All text meets WCAG 2.1 AA (4.5:1 for normal text).
- **Keyboard Navigation**: Ensure all interactive elements are focusable with clear `:focus` styles.
- **ARIA**: Use Radix UI primitives for accessible components (e.g., Dialog, Dropdown).
- **Testing**: Validate with tools like axe DevTools.

**Focus Style Example**:
```css
:focus {
  outline: 2px solid #FF4F03;
  outline-offset: 2px;
}
```

## 5. Motion
Use fast, smooth transitions for a responsive, modern feel.

- **Duration**: 150ms for hover, 250ms for show/hide.
- **Easing**: `cubic-bezier(0.4, 0, 0.2, 1)` for natural motion.

**Example**:
```css
button {
  transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1), color 150ms cubic-bezier(0.4, 0, 0.2, 1);
}
```

## 6. Content and Voice
- **Tone**: Professional, concise, and approachable.
- **Microcopy**:
  - Buttons: “Vote”, “View Details”, “Submit”.
  - Errors: “Unable to load proposals. Please try again.”
- **Localization**: Support text expansion (e.g., 30% for German) and RTL layouts.

## 7. Responsive Design
- **Mobile**: Stack layouts vertically, hide sidebar behind a hamburger menu.
- **Desktop**: Fixed sidebar, multi-column grid for proposals.
- **Touch Targets**: Minimum 48px for buttons and links.

**Example**:
```tsx
<div className="flex flex-col md:flex-row gap-6">
  <aside className="hidden md:block w-20">Sidebar</aside>
  <main className="flex-1">Content</main>
</div>
```

## 8. Code Integration
- **Design Tokens**: Store colors and sizes in `tailwind.config.js`.
- **Component Library**: Use `/src/components/ui` for reusable components.
- **Documentation**: Maintain a Storybook or ZeroHeight instance for component previews.

## 9. Governance
- **Updates**: Use a changelog in the guide’s repository.
- **Contribution**: Submit changes via pull requests with Figma mockups.
- **Audits**: Monthly reviews to ensure adherence.
